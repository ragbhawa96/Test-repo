
package com.pentest4vaadin.demo.services;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.ResourceUtils;
import com.pentest4vaadin.demo.controllers.JSFormController;

import java.io.*;

/**
 * Browser that injects the Form Selector script automatically.
 */
@Service
public class SeleniumBrowser {
    private static final Logger LOG = LoggerFactory.getLogger(JSFormController.class);
    @Autowired
    private WebDriverWrapper driverWrapper;

    /**
     * Start browser and inject script in website.
     * @param url that is openeds
     */
    public void startBrowser(String url) {
        WebDriver driver = driverWrapper.getBrowserWebDriver();
        try {
            driver.get(url);
        }catch(WebDriverException e) {
            // Driver was probably closed. Get new instance.
            driverWrapper.resetBrowserDriver();
            driver = driverWrapper.getBrowserWebDriver();
            driver.get(url);
        }

        JavascriptExecutor js = (JavascriptExecutor) driver;

        try {
            // Inject script and stylesheet that adds the selection functionality.
            File jsFile = ResourceUtils.getFile("classpath:recorduseractions.js");
            File cssFile = ResourceUtils.getFile("classpath:styles.css");

            String script = getFileAsString(jsFile);
            String css = getFileAsString(cssFile);

            LOG.debug("Inject css and js into website...");
            js.executeScript(script);
            js.executeScript("var head = document.getElementsByTagName('head')[0];" +
                    "var style = document.createElement('style');" +
                    "style.type = 'text/css';" +
                    "style.appendChild(document.createTextNode('"+css+"'));" +
                    "head.appendChild(style);");

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    /**
     * Read file and return it as string.
     * @param file that is converted to a string
     * @return file contents
     */
    private String getFileAsString(File file) {
        LOG.debug("Convert file '"+file.getName()+"' to string...");

        try {
            InputStream is = new FileInputStream(file);
            BufferedReader reader = new BufferedReader(new InputStreamReader(is));
            String line;
            StringBuilder sb = new StringBuilder();
            while((line = reader.readLine()) != null) {
                sb.append(line);
            }
            return sb.toString();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }
}
